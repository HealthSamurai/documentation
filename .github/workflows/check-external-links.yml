name: Check External Links

on:
  schedule:
    # Run daily at 2:00 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:  # Allow manual triggering

jobs:
  check-links:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-requests
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
      
      - name: Check external links
        id: check_links
        run: |
          # Run the link checker and capture output with tee to show in stdout and save to file
          set +e  # Don't exit immediately on error
          python scripts/check-external-links.py --docs-dir docs --workers 20 --timeout 15 2>&1 | tee links_report.txt
          EXIT_CODE=${PIPESTATUS[0]}
          set -e
          
          # Save broken links to file if any found
          if [ $EXIT_CODE -ne 0 ]; then
            echo "broken_links_found=true" >> $GITHUB_OUTPUT
            # Extract just the broken links section for issue creation
            awk '/BROKEN LINKS DETAILS/,/SUMMARY:/' links_report.txt > broken_links.txt
          else
            echo "broken_links_found=false" >> $GITHUB_OUTPUT
          fi
          
          exit $EXIT_CODE
        continue-on-error: true
      
      - name: Create issue for broken links
        if: steps.check_links.outputs.broken_links_found == 'true' && github.event_name == 'schedule'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const brokenLinks = fs.readFileSync('broken_links.txt', 'utf8');
            const date = new Date().toISOString().split('T')[0];
            
            // Check if an issue already exists for today
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'broken-links,automated',
              state: 'open'
            });
            
            const todayIssue = issues.data.find(issue => 
              issue.title.includes(date)
            );
            
            if (!todayIssue) {
              // Create a new issue
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `üîó Broken External Links Found - ${date}`,
                body: `## Automated Link Check Report
            
            The daily link checker has found broken external links in the documentation.
            
            ### Broken Links Details
            
            \`\`\`
            ${brokenLinks}
            \`\`\`
            
            ### Action Required
            
            Please review and fix the broken links listed above. Common fixes include:
            - Updating outdated URLs
            - Replacing broken links with archived versions
            - Removing links to resources that no longer exist
            
            ---
            *This issue was automatically created by the [Check External Links workflow](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}).*`,
                labels: ['broken-links', 'automated', 'documentation']
              });
              
              console.log('Created new issue for broken links');
            } else {
              console.log('Issue already exists for today, skipping creation');
            }
      
      - name: Upload link check report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: link-check-report
          path: |
            links_report.txt
            broken_links.txt
          retention-days: 30
      
      - name: Fail if broken links found  
        if: steps.check_links.outputs.broken_links_found == 'true' && github.event_name == 'workflow_dispatch'
        run: |
          echo "‚ùå Broken external links were found in the documentation."
          echo "Please review the report above and fix the broken links."
          exit 1