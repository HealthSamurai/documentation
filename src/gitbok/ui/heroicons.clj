(ns gitbok.ui.heroicons
  (:require
   [hiccup2.core]
   [clojure.string :as str]
   [clojure.java.io :as io]))

(defonce cache (atom {}))

(def sm :sm)
(def xs :xs)
(def outline :outline)

(defn icon
  "tokens: :xs :sm :outline"
  [name cls & tokens]
  (let [tokens (into #{} tokens)
        cache-key (conj (into #{} tokens) name cls)]
    (or (get @cache cache-key)
        (let [size (cond (contains? tokens :xs) "16"
                         (contains? tokens :sm) "20"
                         :else "24")
              style (if (contains? tokens :outline) "outline" "solid")
              file (str "heroicons/" size "/" style "/" name ".svg")
              svg (slurp (io/resource file))
              icon (hiccup2.core/raw (str/replace svg #"^\<svg" (str "<svg class=" (pr-str cls))))]
          (swap! cache assoc cache-key icon)
          icon))))

(defn academic-cap [& args] (apply icon  "academic-cap" args))
(defn adjustments-horizontal [& args] (apply icon  "adjustments-horizontal" args))
(defn adjustments-vertical [& args] (apply icon  "adjustments-vertical" args))
(defn archive-box [& args] (apply icon  "archive-box" args))
(defn archive-box-arrow-down [& args] (apply icon  "archive-box-arrow-down" args))
(defn archive-box-x-mark [& args] (apply icon  "archive-box-x-mark" args))
(defn arrow-down [& args] (apply icon  "arrow-down" args))
(defn arrow-down-circle [& args] (apply icon  "arrow-down-circle" args))
(defn arrow-down-left [& args] (apply icon  "arrow-down-left" args))
(defn arrow-down-on-square [& args] (apply icon  "arrow-down-on-square" args))
(defn arrow-down-on-square-stack [& args] (apply icon  "arrow-down-on-square-stack" args))
(defn arrow-down-right [& args] (apply icon  "arrow-down-right" args))
(defn arrow-down-tray [& args] (apply icon  "arrow-down-tray" args))
(defn arrow-left [& args] (apply icon  "arrow-left" args))
(defn arrow-left-circle [& args] (apply icon  "arrow-left-circle" args))
(defn arrow-left-end-on-rectangle [& args] (apply icon  "arrow-left-end-on-rectangle" args))
(defn arrow-left-on-rectangle [& args] (apply icon  "arrow-left-on-rectangle" args))
(defn arrow-left-start-on-rectangle [& args] (apply icon  "arrow-left-start-on-rectangle" args))
(defn arrow-long-down [& args] (apply icon  "arrow-long-down" args))
(defn arrow-long-left [& args] (apply icon  "arrow-long-left" args))
(defn arrow-long-right [& args] (apply icon  "arrow-long-right" args))
(defn arrow-long-up [& args] (apply icon  "arrow-long-up" args))
(defn arrow-path [& args] (apply icon  "arrow-path" args))
(defn arrow-path-rounded-square [& args] (apply icon  "arrow-path-rounded-square" args))
(defn arrow-right [& args] (apply icon  "arrow-right" args))
(defn arrow-right-circle [& args] (apply icon  "arrow-right-circle" args))
(defn arrow-right-end-on-rectangle [& args] (apply icon  "arrow-right-end-on-rectangle" args))
(defn arrow-right-on-rectangle [& args] (apply icon  "arrow-right-on-rectangle" args))
(defn arrow-right-start-on-rectangle [& args] (apply icon  "arrow-right-start-on-rectangle" args))
(defn arrow-small-down [& args] (apply icon  "arrow-small-down" args))
(defn arrow-small-left [& args] (apply icon  "arrow-small-left" args))
(defn arrow-small-right [& args] (apply icon  "arrow-small-right" args))
(defn arrow-small-up [& args] (apply icon  "arrow-small-up" args))
(defn arrow-top-right-on-square [& args] (apply icon  "arrow-top-right-on-square" args))
(defn arrow-trending-down [& args] (apply icon  "arrow-trending-down" args))
(defn arrow-trending-up [& args] (apply icon  "arrow-trending-up" args))
(defn arrow-turn-down-left [& args] (apply icon  "arrow-turn-down-left" args))
(defn arrow-turn-down-right [& args] (apply icon  "arrow-turn-down-right" args))
(defn arrow-turn-left-down [& args] (apply icon  "arrow-turn-left-down" args))
(defn arrow-turn-left-up [& args] (apply icon  "arrow-turn-left-up" args))
(defn arrow-turn-right-down [& args] (apply icon  "arrow-turn-right-down" args))
(defn arrow-turn-right-up [& args] (apply icon  "arrow-turn-right-up" args))
(defn arrow-turn-up-left [& args] (apply icon  "arrow-turn-up-left" args))
(defn arrow-turn-up-right [& args] (apply icon  "arrow-turn-up-right" args))
(defn arrow-up [& args] (apply icon  "arrow-up" args))
(defn arrow-up-circle [& args] (apply icon  "arrow-up-circle" args))
(defn arrow-up-left [& args] (apply icon  "arrow-up-left" args))
(defn arrow-up-on-square [& args] (apply icon  "arrow-up-on-square" args))
(defn arrow-up-on-square-stack [& args] (apply icon  "arrow-up-on-square-stack" args))
(defn arrow-up-right [& args] (apply icon  "arrow-up-right" args))
(defn arrow-up-tray [& args] (apply icon  "arrow-up-tray" args))
(defn arrow-uturn-down [& args] (apply icon  "arrow-uturn-down" args))
(defn arrow-uturn-left [& args] (apply icon  "arrow-uturn-left" args))
(defn arrow-uturn-right [& args] (apply icon  "arrow-uturn-right" args))
(defn arrow-uturn-up [& args] (apply icon  "arrow-uturn-up" args))
(defn arrows-pointing-in [& args] (apply icon  "arrows-pointing-in" args))
(defn arrows-pointing-out [& args] (apply icon  "arrows-pointing-out" args))
(defn arrows-right-left [& args] (apply icon  "arrows-right-left" args))
(defn arrows-up-down [& args] (apply icon  "arrows-up-down" args))
(defn at-symbol [& args] (apply icon  "at-symbol" args))
(defn backspace [& args] (apply icon  "backspace" args))
(defn backward [& args] (apply icon  "backward" args))
(defn banknotes [& args] (apply icon  "banknotes" args))
(defn bars-2 [& args] (apply icon  "bars-2" args))
(defn bars-3 [& args] (apply icon  "bars-3" args))
(defn bars-3-bottom-left [& args] (apply icon  "bars-3-bottom-left" args))
(defn bars-3-bottom-right [& args] (apply icon  "bars-3-bottom-right" args))
(defn bars-3-center-left [& args] (apply icon  "bars-3-center-left" args))
(defn bars-4 [& args] (apply icon  "bars-4" args))
(defn bars-arrow-down [& args] (apply icon  "bars-arrow-down" args))
(defn bars-arrow-up [& args] (apply icon  "bars-arrow-up" args))
(defn battery-0 [& args] (apply icon  "battery-0" args))
(defn battery-100 [& args] (apply icon  "battery-100" args))
(defn battery-50 [& args] (apply icon  "battery-50" args))
(defn beaker [& args] (apply icon  "beaker" args))
(defn bell [& args] (apply icon  "bell" args))
(defn bell-alert [& args] (apply icon  "bell-alert" args))
(defn bell-slash [& args] (apply icon  "bell-slash" args))
(defn bell-snooze [& args] (apply icon  "bell-snooze" args))
(defn bold [& args] (apply icon  "bold" args))
(defn bolt [& args] (apply icon  "bolt" args))
(defn bolt-slash [& args] (apply icon  "bolt-slash" args))
(defn book-open [& args] (apply icon  "book-open" args))
(defn bookmark [& args] (apply icon  "bookmark" args))
(defn bookmark-slash [& args] (apply icon  "bookmark-slash" args))
(defn bookmark-square [& args] (apply icon  "bookmark-square" args))
(defn briefcase [& args] (apply icon  "briefcase" args))
(defn bug-ant [& args] (apply icon  "bug-ant" args))
(defn building-library [& args] (apply icon  "building-library" args))
(defn building-office [& args] (apply icon  "building-office" args))
(defn building-office-2 [& args] (apply icon  "building-office-2" args))
(defn building-storefront [& args] (apply icon  "building-storefront" args))
(defn cake [& args] (apply icon  "cake" args))
(defn calculator [& args] (apply icon  "calculator" args))
(defn calendar [& args] (apply icon  "calendar" args))
(defn calendar-date-range [& args] (apply icon  "calendar-date-range" args))
(defn calendar-days [& args] (apply icon  "calendar-days" args))
(defn camera [& args] (apply icon  "camera" args))
(defn chart-bar [& args] (apply icon  "chart-bar" args))
(defn chart-bar-square [& args] (apply icon  "chart-bar-square" args))
(defn chart-pie [& args] (apply icon  "chart-pie" args))
(defn chat-bubble-bottom-center [& args] (apply icon  "chat-bubble-bottom-center" args))
(defn chat-bubble-bottom-center-text [& args] (apply icon  "chat-bubble-bottom-center-text" args))
(defn chat-bubble-left [& args] (apply icon  "chat-bubble-left" args))
(defn chat-bubble-left-ellipsis [& args] (apply icon  "chat-bubble-left-ellipsis" args))
(defn chat-bubble-left-right [& args] (apply icon  "chat-bubble-left-right" args))
(defn chat-bubble-oval-left [& args] (apply icon  "chat-bubble-oval-left" args))
(defn chat-bubble-oval-left-ellipsis [& args] (apply icon  "chat-bubble-oval-left-ellipsis" args))
(defn check [& args] (apply icon  "check" args))
(defn check-badge [& args] (apply icon  "check-badge" args))
(defn check-circle [& args] (apply icon  "check-circle" args))
(defn chevron-double-down [& args] (apply icon  "chevron-double-down" args))
(defn chevron-double-left [& args] (apply icon  "chevron-double-left" args))
(defn chevron-double-right [& args] (apply icon  "chevron-double-right" args))
(defn chevron-double-up [& args] (apply icon  "chevron-double-up" args))
(defn chevron-down [& args] (apply icon  "chevron-down" args))
(defn chevron-left [& args] (apply icon  "chevron-left" args))
(defn chevron-right [& args] (apply icon  "chevron-right" args))
(defn chevron-up [& args] (apply icon  "chevron-up" args))
(defn chevron-up-down [& args] (apply icon  "chevron-up-down" args))
(defn circle-stack [& args] (apply icon  "circle-stack" args))
(defn clipboard [& args] (apply icon  "clipboard" args))
(defn clipboard-document [& args] (apply icon  "clipboard-document" args))
(defn clipboard-document-check [& args] (apply icon  "clipboard-document-check" args))
(defn clipboard-document-list [& args] (apply icon  "clipboard-document-list" args))
(defn clock [& args] (apply icon  "clock" args))
(defn cloud [& args] (apply icon  "cloud" args))
(defn cloud-arrow-down [& args] (apply icon  "cloud-arrow-down" args))
(defn cloud-arrow-up [& args] (apply icon  "cloud-arrow-up" args))
(defn code-bracket [& args] (apply icon  "code-bracket" args))
(defn code-bracket-square [& args] (apply icon  "code-bracket-square" args))
(defn cog [& args] (apply icon  "cog" args))
(defn cog-6-tooth [& args] (apply icon  "cog-6-tooth" args))
(defn cog-8-tooth [& args] (apply icon  "cog-8-tooth" args))
(defn command-line [& args] (apply icon  "command-line" args))
(defn computer-desktop [& args] (apply icon  "computer-desktop" args))
(defn cpu-chip [& args] (apply icon  "cpu-chip" args))
(defn credit-card [& args] (apply icon  "credit-card" args))
(defn cube [& args] (apply icon  "cube" args))
(defn cube-transparent [& args] (apply icon  "cube-transparent" args))
(defn currency-bangladeshi [& args] (apply icon  "currency-bangladeshi" args))
(defn currency-dollar [& args] (apply icon  "currency-dollar" args))
(defn currency-euro [& args] (apply icon  "currency-euro" args))
(defn currency-pound [& args] (apply icon  "currency-pound" args))
(defn currency-rupee [& args] (apply icon  "currency-rupee" args))
(defn currency-yen [& args] (apply icon  "currency-yen" args))
(defn cursor-arrow-rays [& args] (apply icon  "cursor-arrow-rays" args))
(defn cursor-arrow-ripple [& args] (apply icon  "cursor-arrow-ripple" args))
(defn device-phone-mobile [& args] (apply icon  "device-phone-mobile" args))
(defn device-tablet [& args] (apply icon  "device-tablet" args))
(defn divide [& args] (apply icon  "divide" args))
(defn document [& args] (apply icon  "document" args))
(defn document-arrow-down [& args] (apply icon  "document-arrow-down" args))
(defn document-arrow-up [& args] (apply icon  "document-arrow-up" args))
(defn document-chart-bar [& args] (apply icon  "document-chart-bar" args))
(defn document-check [& args] (apply icon  "document-check" args))
(defn document-currency-bangladeshi [& args] (apply icon  "document-currency-bangladeshi" args))
(defn document-currency-dollar [& args] (apply icon  "document-currency-dollar" args))
(defn document-currency-euro [& args] (apply icon  "document-currency-euro" args))
(defn document-currency-pound [& args] (apply icon  "document-currency-pound" args))
(defn document-currency-rupee [& args] (apply icon  "document-currency-rupee" args))
(defn document-currency-yen [& args] (apply icon  "document-currency-yen" args))
(defn document-duplicate [& args] (apply icon  "document-duplicate" args))
(defn document-magnifying-glass [& args] (apply icon  "document-magnifying-glass" args))
(defn document-minus [& args] (apply icon  "document-minus" args))
(defn document-plus [& args] (apply icon  "document-plus" args))
(defn document-text [& args] (apply icon  "document-text" args))
(defn ellipsis-horizontal [& args] (apply icon  "ellipsis-horizontal" args))
(defn ellipsis-horizontal-circle [& args] (apply icon  "ellipsis-horizontal-circle" args))
(defn ellipsis-vertical [& args] (apply icon  "ellipsis-vertical" args))
(defn envelope [& args] (apply icon  "envelope" args))
(defn envelope-open [& args] (apply icon  "envelope-open" args))
(defn equals [& args] (apply icon  "equals" args))
(defn exclamation-circle [& args] (apply icon  "exclamation-circle" args))
(defn exclamation-triangle [& args] (apply icon  "exclamation-triangle" args))
(defn eye [& args] (apply icon  "eye" args))
(defn eye-dropper [& args] (apply icon  "eye-dropper" args))
(defn eye-slash [& args] (apply icon  "eye-slash" args))
(defn face-frown [& args] (apply icon  "face-frown" args))
(defn face-smile [& args] (apply icon  "face-smile" args))
(defn film [& args] (apply icon  "film" args))
(defn finger-print [& args] (apply icon  "finger-print" args))
(defn fire [& args] (apply icon  "fire" args))
(defn flag [& args] (apply icon  "flag" args))
(defn folder [& args] (apply icon  "folder" args))
(defn folder-arrow-down [& args] (apply icon  "folder-arrow-down" args))
(defn folder-minus [& args] (apply icon  "folder-minus" args))
(defn folder-open [& args] (apply icon  "folder-open" args))
(defn folder-plus [& args] (apply icon  "folder-plus" args))
(defn forward [& args] (apply icon  "forward" args))
(defn funnel [& args] (apply icon  "funnel" args))
(defn gif [& args] (apply icon  "gif" args))
(defn gift [& args] (apply icon  "gift" args))
(defn gift-top [& args] (apply icon  "gift-top" args))
(defn globe-alt [& args] (apply icon  "globe-alt" args))
(defn globe-americas [& args] (apply icon  "globe-americas" args))
(defn globe-asia-australia [& args] (apply icon  "globe-asia-australia" args))
(defn globe-europe-africa [& args] (apply icon  "globe-europe-africa" args))
(defn h1 [& args] (apply icon  "h1" args))
(defn h2 [& args] (apply icon  "h2" args))
(defn h3 [& args] (apply icon  "h3" args))
(defn hand-raised [& args] (apply icon  "hand-raised" args))
(defn hand-thumb-down [& args] (apply icon  "hand-thumb-down" args))
(defn hand-thumb-up [& args] (apply icon  "hand-thumb-up" args))
(defn hashtag [& args] (apply icon  "hashtag" args))
(defn heart [& args] (apply icon  "heart" args))
(defn home [& args] (apply icon  "home" args))
(defn home-modern [& args] (apply icon  "home-modern" args))
(defn identification [& args] (apply icon  "identification" args))
(defn inbox [& args] (apply icon  "inbox" args))
(defn inbox-arrow-down [& args] (apply icon  "inbox-arrow-down" args))
(defn inbox-stack [& args] (apply icon  "inbox-stack" args))
(defn information-circle [& args] (apply icon  "information-circle" args))
(defn italic [& args] (apply icon  "italic" args))
(defn key [& args] (apply icon  "key" args))
(defn language [& args] (apply icon  "language" args))
(defn lifebuoy [& args] (apply icon  "lifebuoy" args))
(defn light-bulb [& args] (apply icon  "light-bulb" args))
(defn link [& args] (apply icon  "link" args))
(defn link-slash [& args] (apply icon  "link-slash" args))
(defn list-bullet [& args] (apply icon  "list-bullet" args))
(defn lock-closed [& args] (apply icon  "lock-closed" args))
(defn lock-open [& args] (apply icon  "lock-open" args))
(defn magnifying-glass [& args] (apply icon  "magnifying-glass" args))
(defn magnifying-glass-circle [& args] (apply icon  "magnifying-glass-circle" args))
(defn magnifying-glass-minus [& args] (apply icon  "magnifying-glass-minus" args))
(defn magnifying-glass-plus [& args] (apply icon  "magnifying-glass-plus" args))
(defn map [& args] (apply icon  "map" args))
(defn map-pin [& args] (apply icon  "map-pin" args))
(defn megaphone [& args] (apply icon  "megaphone" args))
(defn microphone [& args] (apply icon  "microphone" args))
(defn minus [& args] (apply icon  "minus" args))
(defn minus-circle [& args] (apply icon  "minus-circle" args))
(defn minus-small [& args] (apply icon  "minus-small" args))
(defn moon [& args] (apply icon  "moon" args))
(defn musical-note [& args] (apply icon  "musical-note" args))
(defn newspaper [& args] (apply icon  "newspaper" args))
(defn no-symbol [& args] (apply icon  "no-symbol" args))
(defn numbered-list [& args] (apply icon  "numbered-list" args))
(defn paint-brush [& args] (apply icon  "paint-brush" args))
(defn paper-airplane [& args] (apply icon  "paper-airplane" args))
(defn paper-clip [& args] (apply icon  "paper-clip" args))
(defn pause [& args] (apply icon  "pause" args))
(defn pause-circle [& args] (apply icon  "pause-circle" args))
(defn pencil [& args] (apply icon  "pencil" args))
(defn pencil-square [& args] (apply icon  "pencil-square" args))
(defn percent-badge [& args] (apply icon  "percent-badge" args))
(defn phone [& args] (apply icon  "phone" args))
(defn phone-arrow-down-left [& args] (apply icon  "phone-arrow-down-left" args))
(defn phone-arrow-up-right [& args] (apply icon  "phone-arrow-up-right" args))
(defn phone-x-mark [& args] (apply icon  "phone-x-mark" args))
(defn photo [& args] (apply icon  "photo" args))
(defn play [& args] (apply icon  "play" args))
(defn play-circle [& args] (apply icon  "play-circle" args))
(defn play-pause [& args] (apply icon  "play-pause" args))
(defn plus [& args] (apply icon  "plus" args))
(defn plus-circle [& args] (apply icon  "plus-circle" args))
(defn plus-small [& args] (apply icon  "plus-small" args))
(defn power [& args] (apply icon  "power" args))
(defn presentation-chart-bar [& args] (apply icon  "presentation-chart-bar" args))
(defn presentation-chart-line [& args] (apply icon  "presentation-chart-line" args))
(defn printer [& args] (apply icon  "printer" args))
(defn puzzle-piece [& args] (apply icon  "puzzle-piece" args))
(defn qr-code [& args] (apply icon  "qr-code" args))
(defn question-mark-circle [& args] (apply icon  "question-mark-circle" args))
(defn queue-list [& args] (apply icon  "queue-list" args))
(defn radio [& args] (apply icon  "radio" args))
(defn receipt-percent [& args] (apply icon  "receipt-percent" args))
(defn receipt-refund [& args] (apply icon  "receipt-refund" args))
(defn rectangle-group [& args] (apply icon  "rectangle-group" args))
(defn rectangle-stack [& args] (apply icon  "rectangle-stack" args))
(defn rocket-launch [& args] (apply icon  "rocket-launch" args))
(defn rss [& args] (apply icon  "rss" args))
(defn scale [& args] (apply icon  "scale" args))
(defn scissors [& args] (apply icon  "scissors" args))
(defn server [& args] (apply icon  "server" args))
(defn server-stack [& args] (apply icon  "server-stack" args))
(defn share [& args] (apply icon  "share" args))
(defn shield-check [& args] (apply icon  "shield-check" args))
(defn shield-exclamation [& args] (apply icon  "shield-exclamation" args))
(defn shopping-bag [& args] (apply icon  "shopping-bag" args))
(defn shopping-cart [& args] (apply icon  "shopping-cart" args))
(defn signal [& args] (apply icon  "signal" args))
(defn signal-slash [& args] (apply icon  "signal-slash" args))
(defn slash [& args] (apply icon  "slash" args))
(defn sparkles [& args] (apply icon  "sparkles" args))
(defn speaker-wave [& args] (apply icon  "speaker-wave" args))
(defn speaker-x-mark [& args] (apply icon  "speaker-x-mark" args))
(defn square-2-stack [& args] (apply icon  "square-2-stack" args))
(defn square-3-stack-3d [& args] (apply icon  "square-3-stack-3d" args))
(defn squares-2x2 [& args] (apply icon  "squares-2x2" args))
(defn squares-plus [& args] (apply icon  "squares-plus" args))
(defn star [& args] (apply icon  "star" args))
(defn stop [& args] (apply icon  "stop" args))
(defn stop-circle [& args] (apply icon  "stop-circle" args))
(defn strikethrough [& args] (apply icon  "strikethrough" args))
(defn sun [& args] (apply icon  "sun" args))
(defn swatch [& args] (apply icon  "swatch" args))
(defn table-cells [& args] (apply icon  "table-cells" args))
(defn tag [& args] (apply icon  "tag" args))
(defn ticket [& args] (apply icon  "ticket" args))
(defn trash [& args] (apply icon  "trash" args))
(defn trophy [& args] (apply icon  "trophy" args))
(defn truck [& args] (apply icon  "truck" args))
(defn tv [& args] (apply icon  "tv" args))
(defn underline [& args] (apply icon  "underline" args))
(defn user [& args] (apply icon  "user" args))
(defn user-circle [& args] (apply icon  "user-circle" args))
(defn user-group [& args] (apply icon  "user-group" args))
(defn user-minus [& args] (apply icon  "user-minus" args))
(defn user-plus [& args] (apply icon  "user-plus" args))
(defn users [& args] (apply icon  "users" args))
(defn variable [& args] (apply icon  "variable" args))
(defn video-camera [& args] (apply icon  "video-camera" args))
(defn video-camera-slash [& args] (apply icon  "video-camera-slash" args))
(defn view-columns [& args] (apply icon  "view-columns" args))
(defn viewfinder-circle [& args] (apply icon  "viewfinder-circle" args))
(defn wallet [& args] (apply icon  "wallet" args))
(defn wifi [& args] (apply icon  "wifi" args))
(defn window [& args] (apply icon  "window" args))
(defn wrench [& args] (apply icon  "wrench" args))
(defn wrench-screwdriver [& args] (apply icon  "wrench-screwdriver" args))
(defn x-circle [& args] (apply icon  "x-circle" args))
(defn x-mark [& args] (apply icon "x-mark" args))

